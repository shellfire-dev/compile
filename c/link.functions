# This file is part of compile. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/shellfire-dev/compile/master/COPYRIGHT. No part of compile, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2015 The developers of compile. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/shellfire-dev/compile/master/COPYRIGHT.


core_dependency_requires compile c
compile_c_link_reset()
{
	_compile_c_reset compile_c_link_linkerFlags
	_compile_c_reset compile_c_link_linkedLibraries
}

# These because they are passed by the c compiler front end start   -Wl,
# There are what are required, what we deduce and what the user can then override
compile_c_link_addLinkerFlags()
{	
	local linkedFlag
	for linkedFlag in "$@"
	do
		core_variable_array_append compile_c_link_linkerFlags "$linkedFlag"
	done
}

# LOADLIBES == '@LIBS@ @GUILE_LIBS@ @LIBINTL@'
# Need to add support for -L<dir> so we can find linked libraries!
# These are used during linking, but, because they are passed by the c compiler front end, they are turned into -llib<LIB>.a
# There are what are required, what we deduce and what the user can then override
compile_c_link_addLinkedLibrary()
{	
	local linkedLibrary
	for linkedLibrary in "$@"
	do
		core_variable_array_append compile_c_link_linkedLibraries "$linkedLibrary"
	done
}

compile_c_link()
{
	local CC="$1" # eg gcc
	local executableName="$2" # eg make
	shift 2
	
	# In reality, these are per-system
	local objectExtension='.o'
	local executableExtension='' # eg .exe
	
	local commandLine
	local commandLine_initialised
	core_variable_array_initialise commandLine
	
	core_variable_array_append commandLine "$CC"
	_compile_c_append compile_c_cFlags
	_compile_c_append compile_c_link_linkerFlags
	
	local sourceFileWithoutExtension
	for sourceFileWithoutExtension in "$@"
	do
		local compiledObjectIsInRootSourceFolder="$(core_compatibility_basename "$sourceFileWithoutExtension")"
		core_variable_array_appendUniquely commandLine "${compiledObjectIsInRootSourceFolder}${objectExtension}"
	done

	_compile_c_append compile_c_link_linkedLibraries
	
	core_variable_array_append commandLine -o "${executableName}${executableExtension}"
	
	core_variable_array_passToFunctionAsArguments commandLine compile_escapedCommandLine
	
	compile_c_link_reset
}
